version: '3'

services:
  # backend:
  #   container_name: backend
  #   build:
  #     context: ./services
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - mongodb
  #   networks: 
  #     - tic_network
  nginx:
    image: nginx:latest
    ports:
      - "5000:5000"  # Exponer el puerto 5000 para NGINX
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Montar la configuraci√≥n de NGINX
    depends_on:
      - assetservice
      - layerservice
      - nmapservice
    networks: 
      - tic_network

  assetservice:
    build:
      context: ./services/AssetService  # Ruta al Dockerfile de AssetService
    container_name: assetservice
    env_file:
      - ./services/.env
    # depends_on:
    #   - mongodb
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development

  layerservice:
    build:
      context: ./services/LayerService  # Ruta al Dockerfile de LayerService
    container_name: layerservice
    env_file:
      - ./services/.env
    # depends_on:
    #   - mongodb
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development
  
  nmapservice:
    build:
      context: ./services/NmapService
    container_name: nmapservice
    env_file:
      - ./services/.env
    depends_on:
      # - mongodb
      - redis
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development

  nmapworker:
    build:
      context: ./services/NmapService
    container_name: nmapworker
    # command: celery -A app.tasks worker --loglevel=info
    command: celery -A app.tasks worker --loglevel=info --queues=nmap_queue -n nmap_worker
    depends_on:
      - redis
      # - mongodb
    env_file:
      - ./services/.env
    networks: 
      - tic_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  wapitiservice:
    build:
      context: ./services/WapitiService
    container_name: wapitiservice
    env_file:
      - ./services/.env
    depends_on:
      # - mongodb
      - redis
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development

  wapitiworker:
    build:
      context: ./services/WapitiService
    container_name: wapitiworker
    command: celery -A app.tasks worker --loglevel=info --queues=wapiti_queue -n wapiti_worker
    depends_on:
      - redis
      # - mongodb
    env_file:
      - ./services/.env
    networks: 
      - tic_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
  
  niktoservice:
    build:
      context: ./services/NiktoService
    container_name: niktoservice
    env_file:
      - ./services/.env
    depends_on:
      # - mongodb
      - redis
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development

  niktoworker:
    build:
      context: ./services/NiktoService
    container_name: niktoworker
    command: celery -A app.tasks worker --loglevel=info --queues=nikto_queue -n nikto_worker
    depends_on:
      - redis
      # - mongodb
    env_file:
      - ./services/.env
    networks: 
      - tic_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  masterservice:
    build:
      context: ./services/MasterService
    container_name: masterservice
    env_file:
      - ./services/.env
    depends_on:
      # - mongodb
      - redis
      - niktoservice
      - nmapservice
      - wapitiservice
    networks: 
      - tic_network
    environment:
      - FLASK_ENV=development

  masterworker:
    build:
      context: ./services/MasterService
    container_name: masterworker
    command: celery -A app.tasks worker --loglevel=info --queues=master_queue -n master_worker
    depends_on:
      - redis
      # - mongodb
    env_file:
      - ./services/.env
    networks: 
      - tic_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
  # flower:
  #   image: python:3.9  # Usa una imagen base de Python
  #   command: sh -c "pip install flower celery && celery -A app.tasks.celery flower --port=5555 --broker=${CELERY_BROKER_URL}"
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #       - redis
  #   networks: 
  #     - tic_network

      # - celery_wapiti
  # frontend:
  #   build:
  #     context: ./app
  #   ports:
  #     - "3000:3000"
  # mongodb:
  #   container_name: mongodb
  #   image: mongo:latest
  #   ports:
  #     - "27017:27017"
  #   networks: 
  #     - tic_network

  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:26.0.0
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - KC_BOOTSTRAP_ADMIN_USERNAME=admin
  #     - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
  #   command: start-dev
  #   networks: 
  #     - tic_network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - tic_network

networks:
  tic_network:
    external: true